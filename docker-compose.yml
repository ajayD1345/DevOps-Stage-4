version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    restart: always
    command:
          # provider
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      # metrics
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--log.level=ERROR"
      # logs
      - "--accesslog=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=hamedayojide58@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/acme.json"
   

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.frontend.loadbalancer.server.port=8080"
      - "traefik.http.routers.frontend-http.entrypoints=web"
      - "traefik.http.routers.frontend-http.service=frontend"
      - "traefik.http.routers.frontend-http.rule=Host(`foxcastor.com.ng`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.routers.frontend-https.tls=true"
      - "traefik.http.routers.frontend-https.service=frontend"
      - "traefik.http.routers.frontend-https.rule=Host(`foxcastor.com.ng`)"
      - "traefik.http.routers.frontend-http.middlewares=redirect-https"
      - "traefik.http.middlewares.redirect-https.redirectScheme.scheme=https"
      - "traefik.http.middlewares.redirect-https.redirectScheme.permanent=true" 
    depends_on:
      - auth-api
      - todos-api
    

  auth-api:
    build:
      context: ./auth-api
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - users-api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-https.tls=true"
      - "traefik.http.routers.auth-http.entrypoints=web" 
      - "traefik.http.routers.auth-http.rule=Host(`foxcastor.com.ng`) && PathPrefix(`/api/auth`)"
      - "traefik.http.routers.auth.entrypoints=websecure"
      - "traefik.http.routers.auth.tls.certresolver=myresolver"
      - "traefik.http.routers.auth-https.rule=Host(`foxcastor.com.ng`) && PathPrefix(`/api/auth`)" 
      - "traefik.http.routers.auth-http.middlewares=redirect-https"
      - "traefik.http.middlewares.redirect-https.redirectScheme.scheme=https"
      - "traefik.http.middlewares.redirect-https.redirectScheme.permanent=true" 
   

  todos-api:
    build:
      context: ./todos-api
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - redis-queue  
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todos-https.tls=true"
      - "traefik.http.routers.todos-http.entrypoints=web"  
      - "traefik.http.routers.todos-http.rule=Host(`foxcastor.com.ng`) && PathPrefix(`/api/todos`)"
      - "traefik.http.routers.todos.entrypoints=websecure"
      - "traefik.http.routers.todos.tls.certresolver=myresolver"
      - "traefik.http.routers.todos-https.rule=Host(`foxcastor.com.ng`) && PathPrefix(`/api/todos`)" 
      - "traefik.http.routers.todos-http.middlewares=redirect-https"
      - "traefik.http.middlewares.redirect-https.redirectScheme.scheme=https"
      - "traefik.http.middlewares.redirect-https.redirectScheme.permanent=true"  
   

  users-api:
    build:
      context: ./users-api
      dockerfile: Dockerfile
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.users-http.entrypoints=web"  
      - "traefik.http.routers.users-http.rule=Host(`foxcastor.com.ng`) && PathPrefix(`/api/users`)"
      - "traefik.http.routers.users.entrypoints=websecure"
      - "traefik.http.routers.users.tls.certresolver=myresolver"
      - "traefik.http.routers.users-https.tls=true" 
      - "traefik.http.routers.users-https.rule=Host(`foxcastor.com.ng`) && PathPrefix(`/api/users`)" 
      - "traefik.http.routers.users-http.middlewares=redirect-https"
      - "traefik.http.middlewares.redirect-https.redirectScheme.scheme=https"
      - "traefik.http.middlewares.redirect-https.redirectScheme.permanent=true" 
    

  log-message-processor:
    build:
      context: ./log-message-processor
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - redis-queue
    

  redis-queue:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - redis_data:/data
    

volumes:
  traefik-certificates:
  redis_data:
